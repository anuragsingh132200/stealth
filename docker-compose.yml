version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/jobdb
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    depends_on:
      - redis
      - db
    restart: unless-stopped
    networks:
      - app-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "celery -A app.tasks.celery_app worker --loglevel=info -Q jobs,celery -c 2 --without-heartbeat --without-gossip --without-mingle --without-gossip --without-mingle --pool=prefork --concurrency=2 -Ofair --pidfile= --schedule=/tmp/celerybeat-schedule"
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/jobdb
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    depends_on:
      - redis
      - db
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=jobdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "celery -A app.tasks.celery_app flower --port=5555 --broker=redis://redis:6379/0 --broker_api=redis://redis:6379/0 --persistent=True --db=/tmp/flower.db --enable_events"
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_BASIC_AUTH=admin:admin  # Optional: Basic auth for security
    depends_on:
      - redis
      - worker
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: